//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tamkeen.IndividualsServices.Services.NitaqatServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImmediateApproveQuotaInfo", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class ImmediateApproveQuotaInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int AutoApprovalQuotaField;
        
        private int AllowedNitaqLimitField;
        
        private int UnusedVISACreditField;
        
        private int MinimumForeignersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int AutoApprovalQuota {
            get {
                return this.AutoApprovalQuotaField;
            }
            set {
                if ((this.AutoApprovalQuotaField.Equals(value) != true)) {
                    this.AutoApprovalQuotaField = value;
                    this.RaisePropertyChanged("AutoApprovalQuota");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int AllowedNitaqLimit {
            get {
                return this.AllowedNitaqLimitField;
            }
            set {
                if ((this.AllowedNitaqLimitField.Equals(value) != true)) {
                    this.AllowedNitaqLimitField = value;
                    this.RaisePropertyChanged("AllowedNitaqLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int UnusedVISACredit {
            get {
                return this.UnusedVISACreditField;
            }
            set {
                if ((this.UnusedVISACreditField.Equals(value) != true)) {
                    this.UnusedVISACreditField = value;
                    this.RaisePropertyChanged("UnusedVISACredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int MinimumForeigners {
            get {
                return this.MinimumForeignersField;
            }
            set {
                if ((this.MinimumForeignersField.Equals(value) != true)) {
                    this.MinimumForeignersField = value;
                    this.RaisePropertyChanged("MinimumForeigners");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NitaqatServiceReference.EstablishmentKPIWebServiceSoap")]
    public interface EstablishmentKPIWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEstablishmentQuota", ReplyAction="*")]
        int GetEstablishmentQuota(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEstablishmentQuota", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetEstablishmentQuotaAsync(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEstablishmentColor", ReplyAction="*")]
        int GetEstablishmentColor(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEstablishmentColor", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetEstablishmentColorAsync(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEntitySaudiLaborersCountByEstablishmentNumber", ReplyAction="*")]
        int GetEntitySaudiLaborersCountByEstablishmentNumber(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEntitySaudiLaborersCountByEstablishmentNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetEntitySaudiLaborersCountByEstablishmentNumberAsync(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEstablishmentExcellentLimit", ReplyAction="*")]
        int GetEstablishmentExcellentLimit(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEstablishmentExcellentLimit", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetEstablishmentExcellentLimitAsync(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEstablishmentHighGreenLimit", ReplyAction="*")]
        int GetEstablishmentHighGreenLimit(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEstablishmentHighGreenLimit", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetEstablishmentHighGreenLimitAsync(int laborOfficeId, long sequenceNumber);
        
        // CODEGEN: Generating message contract since element name GetEWVAutoApprovalQuotaResult from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEWVAutoApprovalQuota", ReplyAction="*")]
        Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaResponse GetEWVAutoApprovalQuota(Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEWVAutoApprovalQuota", ReplyAction="*")]
        System.Threading.Tasks.Task<Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaResponse> GetEWVAutoApprovalQuotaAsync(Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEstablishmentMediumGreenLimit", ReplyAction="*")]
        int GetEstablishmentMediumGreenLimit(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEstablishmentMediumGreenLimit", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetEstablishmentMediumGreenLimitAsync(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEstablishmentLowGreenLimit", ReplyAction="*")]
        int GetEstablishmentLowGreenLimit(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEstablishmentLowGreenLimit", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetEstablishmentLowGreenLimitAsync(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEstablishmentYellowLimit", ReplyAction="*")]
        int GetEstablishmentYellowLimit(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEstablishmentYellowLimit", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetEstablishmentYellowLimitAsync(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCompansationVisasForEstablishment", ReplyAction="*")]
        int GetCompansationVisasForEstablishment(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCompansationVisasForEstablishment", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetCompansationVisasForEstablishmentAsync(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCompansationVisasForEntity", ReplyAction="*")]
        int GetCompansationVisasForEntity(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCompansationVisasForEntity", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetCompansationVisasForEntityAsync(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEstablishmentPendingUnUsedVisas", ReplyAction="*")]
        int GetEstablishmentPendingUnUsedVisas(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEstablishmentPendingUnUsedVisas", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetEstablishmentPendingUnUsedVisasAsync(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEntityPendingUnUsedVisas", ReplyAction="*")]
        int GetEntityPendingUnUsedVisas(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEntityPendingUnUsedVisas", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetEntityPendingUnUsedVisasAsync(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckQuotaForVerySmallEntities", ReplyAction="*")]
        bool CheckQuotaForVerySmallEntities(int laborOfficeId, long sequenceNumber, int requestedQuota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckQuotaForVerySmallEntities", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CheckQuotaForVerySmallEntitiesAsync(int laborOfficeId, long sequenceNumber, int requestedQuota);
        
        // CODEGEN: Generating message contract since the wrapper name (CheckQuotaForVerySmallEntitiesForTargetColor) of message CheckQuotaForVerySmallEntitiesForTargetColor does not match the default value (CheckQuotaForVerySmallEntities1)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckQuotaForVerySmallEntitiesForTargetColor", ReplyAction="*")]
        Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForVerySmallEntitiesForTargetColor1 CheckQuotaForVerySmallEntities1(Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForVerySmallEntitiesForTargetColor request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckQuotaForVerySmallEntitiesForTargetColor", ReplyAction="*")]
        System.Threading.Tasks.Task<Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForVerySmallEntitiesForTargetColor1> CheckQuotaForVerySmallEntities1Async(Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForVerySmallEntitiesForTargetColor request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckQuotaForWhiteEstablishment", ReplyAction="*")]
        bool CheckQuotaForWhiteEstablishment(int laborOfficeId, long sequenceNumber, int requestedQuota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckQuotaForWhiteEstablishment", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CheckQuotaForWhiteEstablishmentAsync(int laborOfficeId, long sequenceNumber, int requestedQuota);
        
        // CODEGEN: Generating message contract since the wrapper name (CheckQuotaForWhiteEstablishmentForTargetColor) of message CheckQuotaForWhiteEstablishmentForTargetColor does not match the default value (CheckQuotaForWhiteEstablishment1)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckQuotaForWhiteEstablishmentForTargetColor", ReplyAction="*")]
        Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForWhiteEstablishmentForTargetColor1 CheckQuotaForWhiteEstablishment1(Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForWhiteEstablishmentForTargetColor request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckQuotaForWhiteEstablishmentForTargetColor", ReplyAction="*")]
        System.Threading.Tasks.Task<Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForWhiteEstablishmentForTargetColor1> CheckQuotaForWhiteEstablishment1Async(Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForWhiteEstablishmentForTargetColor request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEntityCurrentTotalNumberofLaborers", ReplyAction="*")]
        int GetEntityCurrentTotalNumberofLaborers(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEntityCurrentTotalNumberofLaborers", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetEntityCurrentTotalNumberofLaborersAsync(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEntityUnUsedVisas", ReplyAction="*")]
        int GetEntityUnUsedVisas(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEntityUnUsedVisas", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetEntityUnUsedVisasAsync(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateEstablishmentEntityHistory", ReplyAction="*")]
        bool ValidateEstablishmentEntityHistory(int laborOfficeId, long sequenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateEstablishmentEntityHistory", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidateEstablishmentEntityHistoryAsync(int laborOfficeId, long sequenceNumber);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetEWVAutoApprovalQuotaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetEWVAutoApprovalQuota", Namespace="http://tempuri.org/", Order=0)]
        public Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaRequestBody Body;
        
        public GetEWVAutoApprovalQuotaRequest() {
        }
        
        public GetEWVAutoApprovalQuotaRequest(Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetEWVAutoApprovalQuotaRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int laborOfficeId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long sequenceNumber;
        
        public GetEWVAutoApprovalQuotaRequestBody() {
        }
        
        public GetEWVAutoApprovalQuotaRequestBody(int laborOfficeId, long sequenceNumber) {
            this.laborOfficeId = laborOfficeId;
            this.sequenceNumber = sequenceNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetEWVAutoApprovalQuotaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetEWVAutoApprovalQuotaResponse", Namespace="http://tempuri.org/", Order=0)]
        public Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaResponseBody Body;
        
        public GetEWVAutoApprovalQuotaResponse() {
        }
        
        public GetEWVAutoApprovalQuotaResponse(Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetEWVAutoApprovalQuotaResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public Tamkeen.IndividualsServices.Services.NitaqatServiceReference.ImmediateApproveQuotaInfo GetEWVAutoApprovalQuotaResult;
        
        public GetEWVAutoApprovalQuotaResponseBody() {
        }
        
        public GetEWVAutoApprovalQuotaResponseBody(Tamkeen.IndividualsServices.Services.NitaqatServiceReference.ImmediateApproveQuotaInfo GetEWVAutoApprovalQuotaResult) {
            this.GetEWVAutoApprovalQuotaResult = GetEWVAutoApprovalQuotaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckQuotaForVerySmallEntitiesForTargetColor", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckQuotaForVerySmallEntitiesForTargetColor {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int laborOfficeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long sequenceNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int requestedQuota;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int targetColorId;
        
        public CheckQuotaForVerySmallEntitiesForTargetColor() {
        }
        
        public CheckQuotaForVerySmallEntitiesForTargetColor(int laborOfficeId, long sequenceNumber, int requestedQuota, int targetColorId) {
            this.laborOfficeId = laborOfficeId;
            this.sequenceNumber = sequenceNumber;
            this.requestedQuota = requestedQuota;
            this.targetColorId = targetColorId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckQuotaForVerySmallEntitiesForTargetColorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckQuotaForVerySmallEntitiesForTargetColor1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool CheckQuotaForVerySmallEntitiesForTargetColorResult;
        
        public CheckQuotaForVerySmallEntitiesForTargetColor1() {
        }
        
        public CheckQuotaForVerySmallEntitiesForTargetColor1(bool CheckQuotaForVerySmallEntitiesForTargetColorResult) {
            this.CheckQuotaForVerySmallEntitiesForTargetColorResult = CheckQuotaForVerySmallEntitiesForTargetColorResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckQuotaForWhiteEstablishmentForTargetColor", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckQuotaForWhiteEstablishmentForTargetColor {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int laborOfficeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long sequenceNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int requestedQuota;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int targetColorId;
        
        public CheckQuotaForWhiteEstablishmentForTargetColor() {
        }
        
        public CheckQuotaForWhiteEstablishmentForTargetColor(int laborOfficeId, long sequenceNumber, int requestedQuota, int targetColorId) {
            this.laborOfficeId = laborOfficeId;
            this.sequenceNumber = sequenceNumber;
            this.requestedQuota = requestedQuota;
            this.targetColorId = targetColorId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckQuotaForWhiteEstablishmentForTargetColorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckQuotaForWhiteEstablishmentForTargetColor1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool CheckQuotaForWhiteEstablishmentForTargetColorResult;
        
        public CheckQuotaForWhiteEstablishmentForTargetColor1() {
        }
        
        public CheckQuotaForWhiteEstablishmentForTargetColor1(bool CheckQuotaForWhiteEstablishmentForTargetColorResult) {
            this.CheckQuotaForWhiteEstablishmentForTargetColorResult = CheckQuotaForWhiteEstablishmentForTargetColorResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EstablishmentKPIWebServiceSoapChannel : Tamkeen.IndividualsServices.Services.NitaqatServiceReference.EstablishmentKPIWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EstablishmentKPIWebServiceSoapClient : System.ServiceModel.ClientBase<Tamkeen.IndividualsServices.Services.NitaqatServiceReference.EstablishmentKPIWebServiceSoap>, Tamkeen.IndividualsServices.Services.NitaqatServiceReference.EstablishmentKPIWebServiceSoap {
        
        public EstablishmentKPIWebServiceSoapClient() {
        }
        
        public EstablishmentKPIWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EstablishmentKPIWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EstablishmentKPIWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EstablishmentKPIWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetEstablishmentQuota(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEstablishmentQuota(laborOfficeId, sequenceNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetEstablishmentQuotaAsync(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEstablishmentQuotaAsync(laborOfficeId, sequenceNumber);
        }
        
        public int GetEstablishmentColor(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEstablishmentColor(laborOfficeId, sequenceNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetEstablishmentColorAsync(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEstablishmentColorAsync(laborOfficeId, sequenceNumber);
        }
        
        public int GetEntitySaudiLaborersCountByEstablishmentNumber(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEntitySaudiLaborersCountByEstablishmentNumber(laborOfficeId, sequenceNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetEntitySaudiLaborersCountByEstablishmentNumberAsync(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEntitySaudiLaborersCountByEstablishmentNumberAsync(laborOfficeId, sequenceNumber);
        }
        
        public int GetEstablishmentExcellentLimit(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEstablishmentExcellentLimit(laborOfficeId, sequenceNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetEstablishmentExcellentLimitAsync(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEstablishmentExcellentLimitAsync(laborOfficeId, sequenceNumber);
        }
        
        public int GetEstablishmentHighGreenLimit(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEstablishmentHighGreenLimit(laborOfficeId, sequenceNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetEstablishmentHighGreenLimitAsync(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEstablishmentHighGreenLimitAsync(laborOfficeId, sequenceNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaResponse Tamkeen.IndividualsServices.Services.NitaqatServiceReference.EstablishmentKPIWebServiceSoap.GetEWVAutoApprovalQuota(Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaRequest request) {
            return base.Channel.GetEWVAutoApprovalQuota(request);
        }
        
        public Tamkeen.IndividualsServices.Services.NitaqatServiceReference.ImmediateApproveQuotaInfo GetEWVAutoApprovalQuota(int laborOfficeId, long sequenceNumber) {
            Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaRequest inValue = new Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaRequest();
            inValue.Body = new Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaRequestBody();
            inValue.Body.laborOfficeId = laborOfficeId;
            inValue.Body.sequenceNumber = sequenceNumber;
            Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaResponse retVal = ((Tamkeen.IndividualsServices.Services.NitaqatServiceReference.EstablishmentKPIWebServiceSoap)(this)).GetEWVAutoApprovalQuota(inValue);
            return retVal.Body.GetEWVAutoApprovalQuotaResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaResponse> Tamkeen.IndividualsServices.Services.NitaqatServiceReference.EstablishmentKPIWebServiceSoap.GetEWVAutoApprovalQuotaAsync(Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaRequest request) {
            return base.Channel.GetEWVAutoApprovalQuotaAsync(request);
        }
        
        public System.Threading.Tasks.Task<Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaResponse> GetEWVAutoApprovalQuotaAsync(int laborOfficeId, long sequenceNumber) {
            Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaRequest inValue = new Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaRequest();
            inValue.Body = new Tamkeen.IndividualsServices.Services.NitaqatServiceReference.GetEWVAutoApprovalQuotaRequestBody();
            inValue.Body.laborOfficeId = laborOfficeId;
            inValue.Body.sequenceNumber = sequenceNumber;
            return ((Tamkeen.IndividualsServices.Services.NitaqatServiceReference.EstablishmentKPIWebServiceSoap)(this)).GetEWVAutoApprovalQuotaAsync(inValue);
        }
        
        public int GetEstablishmentMediumGreenLimit(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEstablishmentMediumGreenLimit(laborOfficeId, sequenceNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetEstablishmentMediumGreenLimitAsync(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEstablishmentMediumGreenLimitAsync(laborOfficeId, sequenceNumber);
        }
        
        public int GetEstablishmentLowGreenLimit(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEstablishmentLowGreenLimit(laborOfficeId, sequenceNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetEstablishmentLowGreenLimitAsync(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEstablishmentLowGreenLimitAsync(laborOfficeId, sequenceNumber);
        }
        
        public int GetEstablishmentYellowLimit(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEstablishmentYellowLimit(laborOfficeId, sequenceNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetEstablishmentYellowLimitAsync(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEstablishmentYellowLimitAsync(laborOfficeId, sequenceNumber);
        }
        
        public int GetCompansationVisasForEstablishment(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetCompansationVisasForEstablishment(laborOfficeId, sequenceNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetCompansationVisasForEstablishmentAsync(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetCompansationVisasForEstablishmentAsync(laborOfficeId, sequenceNumber);
        }
        
        public int GetCompansationVisasForEntity(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetCompansationVisasForEntity(laborOfficeId, sequenceNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetCompansationVisasForEntityAsync(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetCompansationVisasForEntityAsync(laborOfficeId, sequenceNumber);
        }
        
        public int GetEstablishmentPendingUnUsedVisas(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEstablishmentPendingUnUsedVisas(laborOfficeId, sequenceNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetEstablishmentPendingUnUsedVisasAsync(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEstablishmentPendingUnUsedVisasAsync(laborOfficeId, sequenceNumber);
        }
        
        public int GetEntityPendingUnUsedVisas(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEntityPendingUnUsedVisas(laborOfficeId, sequenceNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetEntityPendingUnUsedVisasAsync(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEntityPendingUnUsedVisasAsync(laborOfficeId, sequenceNumber);
        }
        
        public bool CheckQuotaForVerySmallEntities(int laborOfficeId, long sequenceNumber, int requestedQuota) {
            return base.Channel.CheckQuotaForVerySmallEntities(laborOfficeId, sequenceNumber, requestedQuota);
        }
        
        public System.Threading.Tasks.Task<bool> CheckQuotaForVerySmallEntitiesAsync(int laborOfficeId, long sequenceNumber, int requestedQuota) {
            return base.Channel.CheckQuotaForVerySmallEntitiesAsync(laborOfficeId, sequenceNumber, requestedQuota);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForVerySmallEntitiesForTargetColor1 Tamkeen.IndividualsServices.Services.NitaqatServiceReference.EstablishmentKPIWebServiceSoap.CheckQuotaForVerySmallEntities1(Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForVerySmallEntitiesForTargetColor request) {
            return base.Channel.CheckQuotaForVerySmallEntities1(request);
        }
        
        public bool CheckQuotaForVerySmallEntities1(int laborOfficeId, long sequenceNumber, int requestedQuota, int targetColorId) {
            Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForVerySmallEntitiesForTargetColor inValue = new Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForVerySmallEntitiesForTargetColor();
            inValue.laborOfficeId = laborOfficeId;
            inValue.sequenceNumber = sequenceNumber;
            inValue.requestedQuota = requestedQuota;
            inValue.targetColorId = targetColorId;
            Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForVerySmallEntitiesForTargetColor1 retVal = ((Tamkeen.IndividualsServices.Services.NitaqatServiceReference.EstablishmentKPIWebServiceSoap)(this)).CheckQuotaForVerySmallEntities1(inValue);
            return retVal.CheckQuotaForVerySmallEntitiesForTargetColorResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForVerySmallEntitiesForTargetColor1> Tamkeen.IndividualsServices.Services.NitaqatServiceReference.EstablishmentKPIWebServiceSoap.CheckQuotaForVerySmallEntities1Async(Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForVerySmallEntitiesForTargetColor request) {
            return base.Channel.CheckQuotaForVerySmallEntities1Async(request);
        }
        
        public System.Threading.Tasks.Task<Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForVerySmallEntitiesForTargetColor1> CheckQuotaForVerySmallEntities1Async(int laborOfficeId, long sequenceNumber, int requestedQuota, int targetColorId) {
            Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForVerySmallEntitiesForTargetColor inValue = new Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForVerySmallEntitiesForTargetColor();
            inValue.laborOfficeId = laborOfficeId;
            inValue.sequenceNumber = sequenceNumber;
            inValue.requestedQuota = requestedQuota;
            inValue.targetColorId = targetColorId;
            return ((Tamkeen.IndividualsServices.Services.NitaqatServiceReference.EstablishmentKPIWebServiceSoap)(this)).CheckQuotaForVerySmallEntities1Async(inValue);
        }
        
        public bool CheckQuotaForWhiteEstablishment(int laborOfficeId, long sequenceNumber, int requestedQuota) {
            return base.Channel.CheckQuotaForWhiteEstablishment(laborOfficeId, sequenceNumber, requestedQuota);
        }
        
        public System.Threading.Tasks.Task<bool> CheckQuotaForWhiteEstablishmentAsync(int laborOfficeId, long sequenceNumber, int requestedQuota) {
            return base.Channel.CheckQuotaForWhiteEstablishmentAsync(laborOfficeId, sequenceNumber, requestedQuota);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForWhiteEstablishmentForTargetColor1 Tamkeen.IndividualsServices.Services.NitaqatServiceReference.EstablishmentKPIWebServiceSoap.CheckQuotaForWhiteEstablishment1(Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForWhiteEstablishmentForTargetColor request) {
            return base.Channel.CheckQuotaForWhiteEstablishment1(request);
        }
        
        public bool CheckQuotaForWhiteEstablishment1(int laborOfficeId, long sequenceNumber, int requestedQuota, int targetColorId) {
            Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForWhiteEstablishmentForTargetColor inValue = new Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForWhiteEstablishmentForTargetColor();
            inValue.laborOfficeId = laborOfficeId;
            inValue.sequenceNumber = sequenceNumber;
            inValue.requestedQuota = requestedQuota;
            inValue.targetColorId = targetColorId;
            Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForWhiteEstablishmentForTargetColor1 retVal = ((Tamkeen.IndividualsServices.Services.NitaqatServiceReference.EstablishmentKPIWebServiceSoap)(this)).CheckQuotaForWhiteEstablishment1(inValue);
            return retVal.CheckQuotaForWhiteEstablishmentForTargetColorResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForWhiteEstablishmentForTargetColor1> Tamkeen.IndividualsServices.Services.NitaqatServiceReference.EstablishmentKPIWebServiceSoap.CheckQuotaForWhiteEstablishment1Async(Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForWhiteEstablishmentForTargetColor request) {
            return base.Channel.CheckQuotaForWhiteEstablishment1Async(request);
        }
        
        public System.Threading.Tasks.Task<Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForWhiteEstablishmentForTargetColor1> CheckQuotaForWhiteEstablishment1Async(int laborOfficeId, long sequenceNumber, int requestedQuota, int targetColorId) {
            Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForWhiteEstablishmentForTargetColor inValue = new Tamkeen.IndividualsServices.Services.NitaqatServiceReference.CheckQuotaForWhiteEstablishmentForTargetColor();
            inValue.laborOfficeId = laborOfficeId;
            inValue.sequenceNumber = sequenceNumber;
            inValue.requestedQuota = requestedQuota;
            inValue.targetColorId = targetColorId;
            return ((Tamkeen.IndividualsServices.Services.NitaqatServiceReference.EstablishmentKPIWebServiceSoap)(this)).CheckQuotaForWhiteEstablishment1Async(inValue);
        }
        
        public int GetEntityCurrentTotalNumberofLaborers(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEntityCurrentTotalNumberofLaborers(laborOfficeId, sequenceNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetEntityCurrentTotalNumberofLaborersAsync(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEntityCurrentTotalNumberofLaborersAsync(laborOfficeId, sequenceNumber);
        }
        
        public int GetEntityUnUsedVisas(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEntityUnUsedVisas(laborOfficeId, sequenceNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetEntityUnUsedVisasAsync(int laborOfficeId, long sequenceNumber) {
            return base.Channel.GetEntityUnUsedVisasAsync(laborOfficeId, sequenceNumber);
        }
        
        public bool ValidateEstablishmentEntityHistory(int laborOfficeId, long sequenceNumber) {
            return base.Channel.ValidateEstablishmentEntityHistory(laborOfficeId, sequenceNumber);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateEstablishmentEntityHistoryAsync(int laborOfficeId, long sequenceNumber) {
            return base.Channel.ValidateEstablishmentEntityHistoryAsync(laborOfficeId, sequenceNumber);
        }
    }
}
